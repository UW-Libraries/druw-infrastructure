---
  - name: Add hydra-role-management gem to Gemfile
    lineinfile: "dest={{ druw_home }}/Gemfile line=\"gem 'hydra-role-management'\""

  - name: Add postgresql gem to Gemfile
    lineinfile: "dest={{ druw_home }}/Gemfile line=\"gem 'pg'\""

  - name: Bundle install
    become: yes
    command: "bundle install chdir={{ druw_home }}"

  - name: Check if admin users role has been created
    stat: path="{{ druw_home }}/db/migrate*_user_roles.rb"
    register: admin_user_role

  - name: Copy devise.rb.template to devise.rb
    command: "cp {{ druw_home }}/config/initializers/devise.rb.template {{ druw_home}}/config/initializers/devise.rb creates={{ druw_home }}/config/initializers/devise.rb"

  - name: Copy devise secret key into devise.rb
    lineinfile: "dest={{ druw_home }}/config/initializers/devise.rb insertbefore='end' line={{ devise_secret }}"

  - name: Set up admin users role
    command: "rails generate roles chdir={{ druw_home }}"
    when: admin_user_role.stat.exists == False

  - name: Rake db
    become: yes
    command: "bundle exec rake db:migrate RAILS_ENV=production chdir={{ druw_home }}"

  - name: Enable cancan abilities in ability.rb
    lineinfile:
      dest: "{{ druw_home }}/app/models/ability.rb"
      insertafter: "def custom_permissions"
      line: "{{ item }}"
    with_items:
      - "    end"
      - "      can [:create, :show, :add_user, :remove_user, :index, :edit, :update, :destroy], Role"
      - "    if current_user.admin?"
      - "    # app/models/ability.rb"
        
  #- name: Start solr
  #  command: "bundle exec solr_wrapper -d solr/config/ --collection_name hydra-development & chdir={{ druw_home }}"

  #- name: Start FCRepo
  #  command: "bundle exec fcrepo_wrapper -p 8984 & chdir={{ druw_home }}"

  #- name: Start rails webrick server
  #  command: "rails server -b 0.0.0.0 chdir={{ druw_home }}"
